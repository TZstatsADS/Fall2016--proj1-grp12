msum <- sum(saws)
totalsum <- sum(total)
msum
msum
totalsum
mean <- totalsum/msum
mean
e <- (total-(saws*mean))
e
svar <- (e^2)/(20-1)
svar
svar <- sum((e^2))/(20-1)
svar
var.mean <- 0.7921919773
mean-(1.96*var.mean)
1.96*var.mean
saws <- c(3,7,11,9,2,12,14,3,5,9,8,6,3,2,1,4,12,6,5,8)
total <- c(50,110,230,140,60,280,240,45,60,230,140,130,70,50,10,60,280,150,110,120)
msum <- sum(saws)
totalsum <- sum(total)
mean <- totalsum/msum
e <- (total-(saws*mean))
svar <- sum((e^2))/(20-1)
var.mean <- 0.7921919773
1.96*var.mean
1.96*sqrt(var.mean)
no.students <- c(31,29,25,35,15,31,22,27,25,19,30,18,21,40
38,28,17,22,41,32,35,19,29,18,31)
t.score <- c(1590,1510,1490,1610,800,1720,1310,1427,1290,860,1620,710,1140,
1980,1990,1420,900,1080,2010,1740,1750,890,1470,910,1740)
no.students <- c(31,29,25,35,15,31,22,27,25,19,30,18,21,40,
38,28,17,22,41,32,35,19,29,18,31)
t.score <- c(1590,1510,1490,1610,800,1720,1310,1427,1290,860,1620,710,1140,
1980,1990,1420,900,1080,2010,1740,1750,890,1470,910,1740)
length(no.students)
length(t.score)
sum.no <- sum(no.students)
sum.no
totalscore <- sum(t.score)
totalscore
mean.score <- totalscore/sum.no
mean.score
e1 <- (t.score-(no.students*mean.score))
e1
score.var <- sum((e1^2))/(25-1)
score.var
no.employ <- c(51,62,49,73,101,48,65,49,73,61,58,52,65,49,55)
length(no.employ)
no.policy <- c(42,53,40,45,63,31,38,30,54,45,51,29,46,37,42)
length(no.policy)
no.employ <- c(51,62,49,73,101,48,65,49,73,61,58,52,65,49,55)
no.policy <- c(42,53,40,45,63,31,38,30,54,45,51,29,46,37,42)
sum.employ <- sum(no.employ)
sum.policy <- sum(no.policy)
sum.policy
sum.employ
p.hat <- sum.policy/sum.employ
p.hat
e2 <- (no.policy-(no.employ*p.hat))
p.var <- sum((e2^2))/(15-1)
p.var
no.A <- c(680,631,475,935,472,820,933,1171,542,457,983,1462,873,372,621,642,975,
1143,1187,542,973,1541,1679,982,863,742,1010,1092,1242,973,652,523,831,932,
321,487,596,782,980,693,1033,987,872,1093,1461,1301,1167,932,481,999)
no.a
length(no.A)
no.A <- c(680,631,475,935,472,820,933,1171,542,457,983,1462,873,372,621,642,975,
1143,1187,542,973,1541,1679,982,863,742,1010,1092,1242,973,652,523,831,932,
321,487,596,782,980,693,1033,987,872,1093,1461,1301,1167,932,481,999)
no.voter <- c(1290,1170,840,1620,1381,1492,1785,2010,974,832,1247,1896,1943,798,1020,1141,1820,
1893,1942,971,1143,2041,2530,1567,1493,1271,1873,2142,2380,1693,1661,1555,1492,1957,
843,1066,1171,1213,1741,983,1865,1888,1947,2021,2001,1493,1783,1461,1237,1843)
length(no.voter)
sum.A <- sum(no.A)
sum.A
sum.voter <- sum(no.voter)
sum.voter
p.hat2 <- sum.A/sum.voter
p.hat2
e3 <- (no.A-(no.voter*p.hat2))
p2.var <- sum((e3^2))/(50-1)
p2.var
no.house <- c(12,14,3,20,12,8,10,6)
length(no.house)
no.resident <- c(40,39,12,52,37,33,41,14)
no.room <- c(58,72,26,98,74,57,76,48)
sum.house <- sum(no.house)
sum.house
sum.resident <- sum(no.resident)
sum.resident
mean.resident <- no.resident/no.house
mean.resident
mean.resident <- sum.resident/sum.house
mean.resident
e4 <- (no.resident-(mean.resident*no.house))
resident.var <- sum((e4^2))/(8-1)
resident.var
sum.room <- sum(no.room)
sum.room
sum.resident
mean.room <- sum.room/sum.resident
mean.room
e5 <- (no.room-(mean.room*no.resident))
room.var <- sum((e5^2))/(8-1)
room.var
ESdata <- read.table("C:\\Users\\Zachary\\Desktop\\ES.asc",header=TRUE, sep=",")
delta_p <- vector(mode="numeric", length=1878509)
#looping through to create the delta_p
for (i in 1:1878508 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
mean(delta_p)
normal_delta_p <- vector(mode="numeric", length=1878509)
sd(delta_p)
delta_p <- vector(mode="numeric", length=1878509)
#looping through to create the delta_p
for (i in 1:1878509 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
normal_delta_p <- (delta_p - mean(delta_p))/(sd(delta_p))
head(normal_delta_p)
head(delta_p)
dim(delta_p)
length(delta_p)
normal_delta_p <- vector(mode="numeric", length=1878509)
for (i in 1:1878509){
normal_delta_p <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
normal_delta_p <- vector(mode="numeric", length=1878509)
for (i in 1:1878509){
normal_delta_p[i] <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
normal_delta_p <- vector(mode="numeric", length=1878509)
for (i in 1:1878509){
normal_delta_p[i] <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
head(normal_delta_p)
head(delta_p)
delta_p[1]
delta_p[5]
for (i in 1:100){
normal_delta_p[i] <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
head(normal_delta_p)
mean(delta_p)
sd(delta_p)
sd(delta_p)
hist(delta_p, breaks=300, main="Histogram of 1 minute price changes S&P500", freq=F)
ESdata <- read.table("C:\\Users\\Zachary\\Desktop\\ES.asc",header=TRUE, sep=",")
normal_delta_p <- vector(mode="numeric", length=100)
#normalizaing my results
for (i in 1:100){
normal_delta_p[i] <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
mean(delta_p)
head(delta_p)
sd(delta_p)
ESdata <- read.table("C:\\Users\\Zachary\\Desktop\\ES.asc",header=TRUE, sep=",")
delta_p <- vector(mode="numeric", length=1878509)
for (i in 1:1878509 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
head(delta_p)
library(foreign)
write.dta(delta_p, "C:\\Users\\Zachary\\Desktop\\ESdata_delta.dta")
str(delta_p)
data1 <- data.frame(delta_p, ESdata)
write.dta(data1, "C:\\Users\\Zachary\\Desktop\\ESdata_delta.dta")
head(data1)
normal_delta_p <- vector(mode="numeric", length=100)
for (i in 1:100){
normal_delta_p[i] <- (data1$delta_p[i] - mean(data1$delta_p))/(sd(data1$delta_p))
}
head(normal_delta_p)
mean(data1$delta_p)
head(data1)
mean(data1$delta_p)
print(1:6)
dim(ESdata)
delta_p <- vector(mode="numeric", length=1878509)
#looping through to create the delta_p
for (i in 1:1878509 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
data1 <- data.frame(delta_p, ESdata)
write.dta(data1, "C:\\Users\\Zachary\\Desktop\\ESdata_delta.dta")
mean(data1$Close)
mean(data1$delta_p)
str(data1)
for (i in 1:1878508 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
data1 <- data.frame(delta_p, ESdata)
write.dta(data1, "C:\\Users\\Zachary\\Desktop\\ESdata_delta.dta")
dim(ESdata)
for (i in 1:1878510 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
data1 <- data.frame(delta_p, ESdata)
delta_p <- vector(mode="numeric", length=1878509)
for (i in 1:1878510 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
dim(ESdata)
delta_p <- vector(mode="numeric", length=1878508)
for (i in 1:1878508 ){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
mean(delta_p)
sd(delta_p)
normal_delta_p <- vector(mode="numeric", length=100)
#normalizaing my results
for (i in 1:100){
normal_delta_p[i] <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
head(normal_delta_p)
hist(delta_p, breaks=300, main="Histogram of 1 minute price changes S&P500", freq=F)
hist(delta_p, breaks=250, main="Histogram of 1 minute price changes S&P500", freq=F)
hist(delta_p, breaks=280, main="Histogram of 1 minute price changes S&P500", freq=F)
hist(delta_p, breaks=300, main="Histogram of 1 minute price changes S&P500", freq=F)
normal_delta_p <- vector(mode="numeric", length=1878508)
for (i in 1:1878508){
normal_delta_p[i] <- (delta_p[i] - mean(delta_p))/(sd(delta_p))
}
head(normal_delta_p)
write.dta(delta_p, "C:\\Users\\Zachary\\Desktop\\ESdata_delta.dta")
data1 <- data.frame(delta_p, ESdata)
delta_p <- vector(mode="numeric", length=1878509)
#looping through to create the delta_p
for (i in 1:1878509){
delta_p[i] <- (ESdata$Close[i+1] - ESdata$Close[i])
}
data1 <- data.frame(delta_p, ESdata)
write.dta(data1, "C:\\Users\\Zachary\\Desktop\\ESdata_delta.dta")
setwd("Desktop")
data <- read.table("C:\\Users\\Zachary\\Desktop\\WC-5min.asc", sep = ",")
head(data)
data <- read.table("C:\\Users\\Zachary\\Desktop\\WC-5min.asc", sep = ",", header=T)
head(data)
hist(data$Close)
dim(data)
boxplot(ChickWeight$weight, col="Light Red",
main="boxplot of Chicken Weight", xlab="Chicken Weight in Lbs")
boxplot(ChickWeight$weight, col="Red",
main="boxplot of Chicken Weight", xlab="Chicken Weight in Lbs")
?boxplot
boxplot(ChickWeight$weight, col="Red", range = 1.5,
main="boxplot of Chicken Weight", xlab="Chicken Weight in Lbs")
hist(ChickWeight$weight, breaks=10, col="Blue",
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(mean(ChickWeight$weight,col="red"))
abline(a=mean(ChickWeight$weight),col="red")
abline(a=mean(ChickWeight$weight),b=2,col="red")
abline(b=mean(ChickWeight$weight),a=200,col="red")
hist(ChickWeight$weight, breaks=10, col="Blue",
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(a=mean(ChickWeight$weight),b=200,col="red")
abline(v=mean(ChickWeight$weight),col="red")
hist(ChickWeight$weight, breaks=10, col="Blue",
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
hist(ChickWeight$weight, breaks=10,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
boxplot(ChickWeight$weight, range = 1.5,
main="boxplot of Chicken Weight", xlab="Chicken Weight in Lbs")
hist(ChickWeight$weight, breaks=10,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
hist(ChickWeight$weight, breaks=20,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
hist(ChickWeight$weight, breaks=15,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
hist(ChickWeight$weight, breaks=10,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
library(bootstrap)
library(outliers)
data(ChickWeight)
head(ChickWeight)
mean(ChickWeight$weight)
summary(ChickWeight$weight)
par(mfrow=(2,1))
par(mfrow=(2,1))
par(mfrow=c(2,1))
hist(ChickWeight$weight, breaks=10,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
boxplot(ChickWeight$weight, range = 1.5,
main="boxplot of Chicken Weight", xlab="Chicken Weight in Lbs")
hist(ChickWeight$weight, breaks=10,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
boxplot(ChickWeight$weight, range = 1.5,
main="Boxplot of Chicken Weight", xlab="Chicken Weight in Lbs")
legend(2000.9.5,c("mean"))
?legend
legend(2000,5,c("mean"))
boxplot(ChickWeight$weight, range = 1.5,
main="Boxplot of Chicken Weight")
par(mfrow=c(2,1))
hist(ChickWeight$weight, breaks=10,
main="Histogram of Chicken Weight", xlab="Chicken Weight in Lbs")
abline(v=mean(ChickWeight$weight),col="red")
boxplot(ChickWeight$weight, range = 1.5,
main="Boxplot of Chicken Weight")
sd_weight = sd(ChickWeight$weight)
sd_weight
?bootstrap
boot_est = bootstrap(ChickWeight$weight,nboot=10000,
theta=sd(ChickWeight$weight))
theata = function(ChickWeight$weight){sd(ChickWeight$weight)}
boot_est = bootstrap(ChickWeight$weight,nboot=10000,
theta=sd(ChickWeight$weight))
weight = ChickWeight$weight
boot_est = bootstrap(ChickWeight$weight,nboot=10000,
theta=sd(weight))
theta = function(weight){sd(weight)}
boot_est = bootstrap(weight,10000,theata))
boot_est = bootstrap(weight,10000,theata)
theta = function(weight){sd(weight)}
weight = ChickWeight$weight
sd_weight = sd(ChickWeight$weight)
theta = function(weight){sd(weight)}
boot_est = bootstrap(weight,10000,theta)
head(boot_est)
error = boot_est-sd_weight
sd_weight
bias = mean(boot_est)-sd_weight
mean(boot_est)
boot_est
summary(boot_est)
bias = mean(boot_est$thetastar)-sd_weight
bias
bias_sd = mean(boot_est$thetastar)-sd_weight
bias_sd
med_weight = median(ChickWeight$weight)
med_weight
theata_med = function(weight){median(weight)}
med_weight = median(ChickWeight$weight)
boot_est_med = boostrap(weight,10000,theata_med)
med_weight = median(ChickWeight$weight)
theata_med = function(weight){median(weight)}
boot_est_med = bootstrap(weight,10000,theata_med)
summary(boot_est_med)
bias_med = mean(boot_est_med$thetastar)-med_weight
bias_med
sd_weight = sd(ChickWeight$weight)
theta = function(weight){sd(weight)}
boot_est = bootstrap(weight,10000,theta)
bias_sd = mean(boot_est$thetastar)-sd_weight
bias_sd
med_weight = median(ChickWeight$weight)
theata_med = function(weight){median(weight)}
boot_est_med = bootstrap(weight,10000,theata_med)
summary(boot_est_med)
bias_med = mean(boot_est_med$thetastar)-med_weight
bias_med
str(weight)
for (i in 1:578){
sd_weight_jack = sd(weight[-i])
}
sd_weight_jack
?rm
for (i in 1:578){
sd_weight_jack = rm(weight[i])
}
for (i in 1:578){
sd_weight_jack = sd(weight[c(-i)])
}
sd_weight_jack
for (i in 1:578){
weight_new = weight[!i]
}
weight_new
?df
?subset
?jackknife
library(bootstrap)
library(outliers)
?boostrap
?bootstrap
data(ChickWeight)
head(ChickWeight)
weight = ChickWeight$weight
sd_weight = sd(ChickWeight$weight)
theta = function(weight){sd(weight)}
boot_est = bootstrap(weight,10000,theta)
summary(boot_est)
bias_sd = mean(boot_est$thetastar)-sd_weight
?jackknife
sd_weight = sd(ChickWeight$weight)
theta_sd = function(weight){sd(weight)}
boot_est = bootstrap(weight,10000,thet
df
sd_weight = sd(ChickWeight$weight)
theta_sd = function(weight){sd(weight)}
boot_est = bootstrap(weight,10000,theta_sd)
jackknife_sd = jackkknife(weight,theta_sd)
sumjmary(jackknife_sd)
jackknife_sd = jackknife(weight,theta_sd)
summary(jackknife_sd)
jjackknife_sd
jackknife_sd
med_weight = median(ChickWeight$weight)
theata_med = function(weight){median(weight)}
jackknife_med = jackknife(weight,theta_med)
med_weight = median(ChickWeight$weight)
theta_med = function(weight){median(weight)}
boot_est_med = bootstrap(weight,10000,thetta_med)
summary(boot_est_med)
bias_med = mean(boot_est_med$thetastar)-med_weight
jackknife_med = jackknife(weight,theta_med)
summary(jackknife_med)
jackknife_med
jackknife_sd = jackknife(weight,theta_sd)
jackknife_sd
jackknife_med = jackknife(weight,theta_med)
jackknife_med
?seelct
?select
?Select
?wd
setwd("C:\\Users\Zachary\\Desktop\\csv_pus.zip")
setwd("C:\\Users\Zachary\\Desktop\\csv_pus.zip")
setwd("C:\\Users\Zachary\\Desktop\\csv_pus")
setwd("C:\\Users\Zachary\\Desktop\\csv_pub")
setwd("C:/Users/Zachary/Desktop/csv_pus.zip")
setwd("C:/Users/Zachary/Desktop/csv_pus.zip")
library(foreign)
library(dplyr)
library(ggplot2)
library(plyr)
library(maps)
setwd("C:\\Users\\Zachary\\Desktop\\ADS Project")
ACS_pus_2 = read.csv("ACS_pus_2.csv")
ACS_pus_2$MAR_New[ACS_pus_2$MAR == 1] = 1
ACS_pus_2$MAR_New[ACS_pus_2$MAR != 1] = 0
table(ACS_pus_2$RAC1P)
Loe_Lev = c(0,500,800,1005,1300,1600,2000,2100,2200,2600,3000,3600,3700,
4000,4200,4300,4700,5000,6005,6200,6800,7000,7700,9000,9800,9900)
loe_lev_name = c("MGR","BUS", "FIN", "CMM", "ENG", "SCI", "CMS", "LGL", "EDU",
"ENT", "MED","HLS","PRT","EAT","CLN","PRS","SAL","OFF","FFF",
"CON","EXT","RPR","PRD","TRN","MIL","UNEMPLOYED ")
for (i in 1:26){
ACS_pus_2$OCCP_New[ACS_pus_2$OCCP >= Loe_Lev[i] ] = i
ACS_pus_2$OCCUPENCY[ACS_pus_2$OCCP >= Loe_Lev[i]] = loe_lev_name[i]
}
ACS_pus_2$OCCP_New = as.factor(ACS_pus_2$OCCP_New)
ACS_pus_2$WKW = as.factor(ACS_pus_2$WKW)
ACS_pus_2$SCHL = as.factor(ACS_pus_2$SCHL)
ACS_pus_2$RAC1P = as.factor(ACS_pus_2$RAC1P)
ACS_pus_2$Count = vector(length = 1638593)
Marriage.Status = as.factor(ACS_pus_2$MAR_New)
all_states = map_data()
?map_data
all_states = map_data(usa)
all_states = map_data("usa")
all_states = map_data("state")
all_states
all_states = map_data("state")
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
color="white',fill="grey10")
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
colour="white',fill="grey10")
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat),
colour="white',fill="grey10")
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
colour="white",fill="grey10")
states_plot
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
colour="white",fill="blue")
states_plot
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
colour="white",fill="grey10")
states_plot
ggplot(ACS_pus_2, aes(Marriage.Status,group), main = "Plot of Marriage VS Occupation", xlab = "OCCUPENCY", ylab = "Count of Marriage Status") +
geom_bar(aes(,fill = Marriage.Status), position = "dodge")
ggplot(ACS_pus_2, aes(Marriage.Status), main = "Plot of Marriage VS Occupation", xlab = "OCCUPENCY", ylab = "Count of Marriage Status") +
geom_bar(aes(,fill = Marriage.Status), position = "dodge")
ggplot(ACS_pus_2, aes(RAC1P), main = "Plot of Marriage VS Occupation", xlab = "OCCUPENCY", ylab = "Count of Marriage Status") +
geom_bar(aes(,fill = Marriage.Status), position = "dodge")
ggplot(ACS_pus_2, aes(Marriage.Status), main = "Plot of Marriage VS Occupation", xlab = "OCCUPENCY", ylab = "Count of Marriage Status") +
geom_bar(aes(,fill = RAC1P), position = "dodge")
ggplot(ACS_pus_2, aes(Marriage.Status,..prop..), main = "Plot of Marriage VS Occupation", xlab = "OCCUPENCY", ylab = "Count of Marriage Status") +
geom_bar(aes(,fill = RAC1P), position = "dodge")
ggplot(ACS_pus_2, aes(Marriage.Status,..count..), main = "Plot of Marriage VS Occupation", xlab = "OCCUPENCY", ylab = "Count of Marriage Status") +
geom_bar(aes(,fill = RAC1P), position = "dodge")
ggplot(ACS_pus_2, aes(Race, ..count..)) +
geom_bar(aes(fill = ..count..))+
xlab("Race")
ggplot(ACS_pus_2, aes(Race, ..count..)) +
geom_bar(aes(fill = ..count..))+
xlab("Race1P")
ggplot(ACS_pus_2, aes(Race1P, ..count..)) +
geom_bar(aes(fill = ..count..))+
xlab("Race1P")
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
colour="white",fill="grey10")
states_plot =  ggplot() + geom_polygon(data=all_states,
aes(x=long,y=lat,group=group),
colour="white",fill="grey10")
states_plot
